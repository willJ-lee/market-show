{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2529d779\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"wrapper__img\",\n  src: \"http://www.dell-lee.com/imgs/vue3/user.png\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"wrapper__input\"\n};\nconst _hoisted_4 = {\n  class: \"wrapper__input\"\n};\nconst _hoisted_5 = {\n  class: \"wrapper__login-link\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"wrapper__login-link-separate\"\n}, \"|\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"wrapper__login-link-reset\"\n}, \"忘记密码\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Toast = _resolveComponent(\"Toast\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"wrapper__input__content\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    placeholder: \"请输入用户名\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.username]])]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"wrapper__input__content\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    placeholder: \"请输入密码\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.password]])]), _createElementVNode(\"div\", {\n    class: \"wrapper__login-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.handlelogin && $setup.handlelogin(...args))\n  }, \"登录\"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", {\n    class: \"wrapper__login-link-registe\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.handleRegisterClcik && $setup.handleRegisterClcik(...args))\n  }, \"立即注册\"), _hoisted_6, _hoisted_7])]), $setup.showToast ? (_openBlock(), _createBlock(_component_Toast, {\n    key: 0,\n    message: $setup.toastMessage\n  }, null, 8\n  /* PROPS */\n  , [\"message\"])) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;gEACTC,oBAA2E,KAA3E,EAA2E;AAAtED,OAAK,EAAC,cAAgE;AAAjDE,KAAG,EAAC;AAA6C,CAA3E;;AAAA;;;AACKF,OAAK,EAAC;;;AAGNA,OAAK,EAAC;;;AAINA,OAAK,EAAC;;;gEAETC,oBAAmD,MAAnD,EAAmD;AAA7CD,OAAK,EAAC;AAAuC,CAAnD,EAA2C,GAA3C,EAA4C;AAAA;AAA5C;;gEACAC,oBAAmD,MAAnD,EAAmD;AAA7CD,OAAK,EAAC;AAAuC,CAAnD,EAAwC,MAAxC,EAA4C;AAAA;AAA5C;;;;;6DAZJC,oBAcM,KAdN,cAcM,CAbJE,UAaI,EAZJF,oBAEM,KAFN,cAEM,iBADJA,oBAAgF,OAAhF,EAAgF;AAAzED,SAAK,EAAC,yBAAmE;+DAAhCI,kBAAQC,OAAwB;AAAtBC,eAAW,EAAC;AAAU,GAAhF;;AAAA,oBAAgDF,kBAC5C,CAFN,CAYI,EATJH,oBAEM,KAFN,cAEM,iBADJA,oBAAiG,OAAjG,EAAiG;AAA1FM,QAAI,EAAC,UAAqF;AAA1EP,SAAK,EAAC,yBAAoE;+DAAhCI,kBAAQC,OAAwB;AAAtBC,eAAW,EAAC;AAAU,GAAjG;;AAAA,oBAAiEF,kBAC7D,CAFN,CASI,EANJH,oBAAgE,KAAhE,EAAgE;AAA3DD,SAAK,EAAC,uBAAqD;AAA5BQ,WAAK,yCAAEJ,iDAAF;AAAuB,GAAhE,EAAwD,IAAxD,CAMI,EALJH,oBAIM,KAJN,cAIM,CAHJA,oBAAkF,MAAlF,EAAkF;AAA5ED,SAAK,EAAC,6BAAsE;AAAvCQ,WAAK,yCAAEJ,iEAAF;AAAkC,GAAlF,EAAuE,MAAvE,CAGI,EAFJK,UAEI,EADJC,UACI,CAJN,CAKI,CAdN,GAeaN,kCAAbO,aAAkDC,gBAAlD,EAAkD;UAAA;AAAzBC,WAAO,EAAET;AAAgB,GAAlD;;AAAA","names":["class","_createElementVNode","src","_hoisted_2","$setup","$event","placeholder","type","onClick","_hoisted_6","_hoisted_7","_createBlock","_component_Toast","message"],"sourceRoot":"","sources":["/Users/mac/Desktop/jingdong/src/views/login/Login.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <img class=\"wrapper__img\" src=\"http://www.dell-lee.com/imgs/vue3/user.png\">\n    <div class=\"wrapper__input\">\n      <input class=\"wrapper__input__content\" v-model=\"username\" placeholder=\"请输入用户名\"/>\n    </div>\n    <div class=\"wrapper__input\">\n      <input type=\"password\" class=\"wrapper__input__content\"  v-model=\"password\" placeholder=\"请输入密码\" />\n    </div>\n    <div class=\"wrapper__login-button\" @click='handlelogin'>登录</div>\n    <div class=\"wrapper__login-link\">\n      <span class=\"wrapper__login-link-registe\" @click='handleRegisterClcik'>立即注册</span>\n      <span class=\"wrapper__login-link-separate\">|</span>\n      <span class=\"wrapper__login-link-reset\">忘记密码</span>\n    </div>\n  </div>\n  <Toast v-if='showToast' :message='toastMessage' />\n</template>\n\n<script>\nimport { reactive, toRefs } from 'vue'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\nimport { post } from '../../utils/request.js'\n// 引入弹出蒙层函数\nimport Toast, { useToastEffect } from '../../components/Toast.vue'\n\n// 跳转到注册页面\nconst userRegisterEfffect = () => {\n  const router = useRouter()\n  const handleRegisterClcik = () => {\n    router.push({ name: 'Register' })\n  }\n  return { handleRegisterClcik }\n}\n\n// 路由权限跳转 islogin\nconst useLoginEffect = (errMessage) => {\n  const data = reactive({\n    username: '',\n    password: ''\n  })\n  const router = useRouter()\n  const handlelogin = async () => {\n    try {\n      const { usernmae, password } = data\n      if (username !== '' || password !== '') {\n        const result = await post('/vue/login', {\n          username: data.username,\n          password: data.password\n        })\n        if (result?.error === 0) {\n          localStorage.isLogin = true\n          router.push({ name: 'Home' })\n        } else {\n          errMessage('登录失败')\n        }\n      } else {\n        errMessage('请输入用户名或密码')\n      }\n    } catch (e) {\n      errMessage('请求失败')\n    }\n  }\n  const { username, password } = toRefs(data)\n  return { username, password, handlelogin }\n}\n\nexport default {\n  name: 'Login',\n  components: {\n    Toast\n  },\n  setup () {\n    // 解构蒙层函数代码\n    const { showToast, toastMessage, errMessage } = useToastEffect()\n    const { username, password, handlelogin } = useLoginEffect(errMessage)\n    const { handleRegisterClcik } = userRegisterEfffect()\n    return { handlelogin, handleRegisterClcik, showToast, toastMessage, username, password }\n  }\n}\n</script>\n\n<style lang='scss' scoped>\n@import '../../style/viriables.scss';\n  .wrapper {\n    position: absolute;\n    top: 50%;\n    left: 0;\n    right: 0;\n    transform: translateY(-50%);\n    &__img {\n      display: block;\n      margin:0 auto .4rem;\n      width: .66rem;\n      height: .66rem\n    }\n    &__input {\n      margin: 0 .4rem .16rem;\n      padding: 0 .16rem;\n      height: .48rem;\n      background: #F9F9F9;\n      border: 1px solid rgba(0,0,0,0.10);\n      border-radius: .06rem;;\n      &__content {\n        width: 100%;\n        line-height: .48rem;\n        border: none;\n        outline: none;\n        font-size: .16rem;\n        background: none;\n        &::placeholder {\n          color: $content-notice-fontcolor;\n        }\n      }\n    }\n    &__login-button {\n      margin: .32rem .4rem .16rem;\n      height: .48rem;\n      box-shadow: 0 .04rem .08rem 0 rgba(0,145,255,0.32);\n      border-radius: .04rem;\n      background: #0091FF;\n      text-align: center;\n      line-height: .48rem;\n      font-size: .16rem;\n      color: #fff;\n    }\n    &__login-link {\n      text-align: center;\n      font-size: .14rem;\n      color: $content-notice-fontcolor;\n      &-separate {\n        margin: 0 .12rem;\n      }\n    }\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}