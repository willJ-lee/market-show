{"ast":null,"code":"import { createStore } from 'vuex'; // 本地存储相关方法\n\nconst setLocalCartData = state => {\n  const {\n    cartList\n  } = state;\n  const cartListString = JSON.stringify(cartList);\n  localStorage.cartList = cartListString;\n};\n\nconst getLocalCartData = () => {\n  return JSON.parse(localStorage.cartList) || {};\n};\n\nexport default createStore({\n  state: {\n    // 数据格式: {shopId: { shopName: '', productList: { productId: { ... } } }}\n    cartList: {\n      \"2\": {\n        \"shopName\": \"沃尔玛\",\n        \"productList\": {\n          \"1\": {\n            \"_id\": \"1\",\n            \"name\": \"番茄 250g / 份\",\n            \"imgUrl\": \"http://www.dell-lee.com/imgs/vue3/tomato.png\",\n            \"sales\": 10,\n            \"price\": 33.6,\n            \"oldPrice\": 39.6,\n            \"count\": 1,\n            \"check\": true\n          },\n          \"2\": {\n            \"_id\": \"2\",\n            \"name\": \"车厘子 500g / 份\",\n            \"imgUrl\": \"http://www.dell-lee.com/imgs/vue3/cherry.png\",\n            \"sales\": 10,\n            \"price\": 99.6,\n            \"oldPrice\": 119.6,\n            \"count\": 1,\n            \"check\": true\n          },\n          \"3\": {\n            \"_id\": \"3\",\n            \"name\": \"橙子 500g/份\",\n            \"imgUrl\": \"http://www.dell-lee.com/imgs/vue3/orange.png\",\n            \"sales\": 110,\n            \"price\": 12.6,\n            \"oldPrice\": 22.6,\n            \"count\": 1,\n            \"check\": true\n          },\n          \"4\": {\n            \"_id\": \"4\",\n            \"name\": \"帝王蟹 250g / 份\",\n            \"imgUrl\": \"http://www.dell-lee.com/imgs/vue3/crab.png\",\n            \"sales\": 10,\n            \"price\": 199.9,\n            \"oldPrice\": 299.9,\n            \"count\": 1,\n            \"check\": true\n          }\n        }\n      }\n    }\n  },\n  getters: {},\n  mutations: {\n    changeCartItemInfo(state, payload) {\n      // 结构传递过来的数据\n      const {\n        shopId,\n        productId,\n        productInfo\n      } = payload; // 通过商铺ID获取cartlist中的商铺信息, 判断商铺信息是否存在, 没有的话赋值为默认值\n\n      let shopInfo = state.cartList[shopId] || {\n        shopName: '',\n        productList: {}\n      }; // 获取商铺中的商铺\n\n      let product = shopInfo.productList[productId]; // 判断商品是否存在,不存在则将传递过来的商品productinfo保存到product中,将count赋值为0\n\n      if (!product) {\n        product = productInfo;\n        product.count = 0;\n      } // count数值加一\n\n\n      product.count = product.count + payload.number;\n\n      if (payload.number > 0) {\n        product.check = true;\n      } // count的值小于0则重新赋值为0\n\n\n      if (product.count < 0) {\n        product.count = 0;\n      } // 将修改过的product放回商铺中,替换原来的数据\n\n\n      shopInfo.productList[productId] = product; // 将商铺信息存放到cartList中\n\n      state.cartList[shopId] = shopInfo;\n      setLocalCartData(state);\n    },\n\n    // 修改传递过来店铺的名字\n    changeShopName(state, payload) {\n      const {\n        shopId,\n        shopName\n      } = payload;\n      const shopInfo = state.cartList[shopId] || {\n        shopNmae: '',\n        productList: {}\n      };\n      shopInfo.shopName = shopName;\n      state.cartList[shopId] = shopInfo;\n      setLocalCartData(state);\n    },\n\n    // 改变购物车物品选中状态\n    changeCartItemChecked(state, payload) {\n      const {\n        shopId,\n        productId\n      } = payload;\n      const product = state.cartList[shopId].productList[productId];\n      product.check = !product.check;\n      setLocalCartData(state);\n    },\n\n    // 全选功能\n    setCartItemSelect(state, payload) {\n      const {\n        shopId\n      } = payload;\n      const products = state.cartList[shopId].productList;\n\n      if (products) {\n        for (const i in products) {\n          const product = products[i];\n          product.check = true;\n        }\n      }\n\n      setLocalCartData(state);\n    },\n\n    // 清空购物车\n    cleanCartProducts(state, payload) {\n      const {\n        shopId\n      } = payload;\n      state.cartList[shopId].productList = {};\n      setLocalCartData(state);\n    }\n\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"sources":["/Users/mac/Desktop/jingdong/src/store/index.js"],"names":["createStore","setLocalCartData","state","cartList","cartListString","JSON","stringify","localStorage","getLocalCartData","parse","getters","mutations","changeCartItemInfo","payload","shopId","productId","productInfo","shopInfo","shopName","productList","product","count","number","check","changeShopName","shopNmae","changeCartItemChecked","setCartItemSelect","products","i","cleanCartProducts","actions","modules"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex'\n\n// 本地存储相关方法\nconst setLocalCartData = (state) => {\n  const { cartList } = state\n  const cartListString = JSON.stringify(cartList)\n  localStorage.cartList = cartListString\n}\n\nconst getLocalCartData = () => {\n  return JSON.parse(localStorage.cartList) || {}\n}\n\nexport default createStore({\n  state: {\n    // 数据格式: {shopId: { shopName: '', productList: { productId: { ... } } }}\n    cartList: {\"2\":{\"shopName\":\"沃尔玛\",\"productList\":{\"1\":{\"_id\":\"1\",\"name\":\"番茄 250g / 份\",\"imgUrl\":\"http://www.dell-lee.com/imgs/vue3/tomato.png\",\"sales\":10,\"price\":33.6,\"oldPrice\":39.6,\"count\":1,\"check\":true},\"2\":{\"_id\":\"2\",\"name\":\"车厘子 500g / 份\",\"imgUrl\":\"http://www.dell-lee.com/imgs/vue3/cherry.png\",\"sales\":10,\"price\":99.6,\"oldPrice\":119.6,\"count\":1,\"check\":true},\"3\":{\"_id\":\"3\",\"name\":\"橙子 500g/份\",\"imgUrl\":\"http://www.dell-lee.com/imgs/vue3/orange.png\",\"sales\":110,\"price\":12.6,\"oldPrice\":22.6,\"count\":1,\"check\":true},\"4\":{\"_id\":\"4\",\"name\":\"帝王蟹 250g / 份\",\"imgUrl\":\"http://www.dell-lee.com/imgs/vue3/crab.png\",\"sales\":10,\"price\":199.9,\"oldPrice\":299.9,\"count\":1,\"check\":true}}}}\n  },\n  getters: {\n  },\n  mutations: {\n    changeCartItemInfo (state, payload) {\n      // 结构传递过来的数据\n      const { shopId, productId, productInfo } = payload\n      // 通过商铺ID获取cartlist中的商铺信息, 判断商铺信息是否存在, 没有的话赋值为默认值\n      let shopInfo = state.cartList[shopId] || {\n        shopName: '', productList: {}\n      }\n      // 获取商铺中的商铺\n      let product = shopInfo.productList[productId]\n      // 判断商品是否存在,不存在则将传递过来的商品productinfo保存到product中,将count赋值为0\n      if (!product) {\n        product = productInfo\n        product.count = 0\n      }\n      // count数值加一\n      product.count = product.count + payload.number\n      if (payload.number > 0) { product.check = true }\n      // count的值小于0则重新赋值为0\n      if (product.count < 0) {\n        product.count = 0\n      }\n      // 将修改过的product放回商铺中,替换原来的数据\n      shopInfo.productList[productId] = product\n      // 将商铺信息存放到cartList中\n      state.cartList[shopId] = shopInfo\n\n      setLocalCartData(state)\n    },\n\n    // 修改传递过来店铺的名字\n    changeShopName (state, payload) {\n      const { shopId, shopName } = payload\n      const shopInfo = state.cartList[shopId] || {\n        shopNmae: '', productList: {}\n      }\n      shopInfo.shopName = shopName\n      state.cartList[shopId] = shopInfo\n\n      setLocalCartData(state)\n    },\n\n    // 改变购物车物品选中状态\n    changeCartItemChecked (state, payload) {\n      const { shopId, productId } = payload\n      const product = state.cartList[shopId].productList[productId]\n      product.check = !product.check\n\n      setLocalCartData(state)\n    },\n\n    // 全选功能\n    setCartItemSelect (state, payload) {\n      const { shopId } = payload\n      const products = state.cartList[shopId].productList\n      if (products) {\n        for (const i in products) {\n          const product = products[i]\n          product.check = true\n        }\n      }\n\n      setLocalCartData(state)\n    },\n\n    // 清空购物车\n    cleanCartProducts (state, payload) {\n      const { shopId } = payload\n      state.cartList[shopId].productList = { }\n\n      setLocalCartData(state)\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n"]},"metadata":{},"sourceType":"module"}