{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    cartList: {}\n  },\n  getters: {},\n  mutations: {\n    addItemToCart(state, payload) {\n      // 结构传递过来的数据\n      const {\n        shopId,\n        productId,\n        productInfo\n      } = payload; // 通过商铺ID获取cartlist中的商铺信息\n\n      let shopinfo = state.cartList[shopId]; // 判断商铺信息是否存在, 没有的话赋值为空对象\n\n      if (!shopinfo) {\n        shopinfo = {};\n      } // 获取商铺中\n\n\n      let product = shopinfo[productId];\n\n      if (!product) {\n        product = productInfo;\n        product.count = 0;\n      }\n\n      product.count += 1;\n      shopinfo[productId] = product;\n      state.cartList[shopId] = shopinfo;\n    }\n\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"sources":["/Users/mac/Desktop/jingdong/src/store/index.js"],"names":["createStore","state","cartList","getters","mutations","addItemToCart","payload","shopId","productId","productInfo","shopinfo","product","count","actions","modules"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;AACzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GADkB;AAKzBC,EAAAA,OAAO,EAAE,EALgB;AAOzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,CAAEJ,KAAF,EAASK,OAAT,EAAkB;AAC7B;AACA,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,SAAV;AAAqBC,QAAAA;AAArB,UAAqCH,OAA3C,CAF6B,CAG7B;;AACA,UAAII,QAAQ,GAAGT,KAAK,CAACC,QAAN,CAAeK,MAAf,CAAf,CAJ6B,CAK7B;;AACA,UAAI,CAACG,QAAL,EAAe;AACbA,QAAAA,QAAQ,GAAG,EAAX;AACD,OAR4B,CAS7B;;;AACA,UAAIC,OAAO,GAAGD,QAAQ,CAACF,SAAD,CAAtB;;AACA,UAAI,CAACG,OAAL,EAAc;AACZA,QAAAA,OAAO,GAAGF,WAAV;AACAE,QAAAA,OAAO,CAACC,KAAR,GAAgB,CAAhB;AACD;;AACDD,MAAAA,OAAO,CAACC,KAAR,IAAiB,CAAjB;AACAF,MAAAA,QAAQ,CAACF,SAAD,CAAR,GAAsBG,OAAtB;AACAV,MAAAA,KAAK,CAACC,QAAN,CAAeK,MAAf,IAAyBG,QAAzB;AACD;;AAnBQ,GAPc;AA4BzBG,EAAAA,OAAO,EAAE,EA5BgB;AA8BzBC,EAAAA,OAAO,EAAE;AA9BgB,CAAD,CAA1B","sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    cartList: {\n    }\n  },\n  getters: {\n  },\n  mutations: {\n    addItemToCart (state, payload) {\n      // 结构传递过来的数据\n      const { shopId, productId, productInfo } = payload\n      // 通过商铺ID获取cartlist中的商铺信息\n      let shopinfo = state.cartList[shopId]\n      // 判断商铺信息是否存在, 没有的话赋值为空对象\n      if (!shopinfo) {\n        shopinfo = {}\n      }\n      // 获取商铺中\n      let product = shopinfo[productId]\n      if (!product) {\n        product = productInfo\n        product.count = 0\n      }\n      product.count += 1\n      shopinfo[productId] = product\n      state.cartList[shopId] = shopinfo\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n"]},"metadata":{},"sourceType":"module"}