{"ast":null,"code":"import { reactive, toRefs } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { post } from '../../utils/request.js';\nimport Toast, { useToastEffect } from '../../components/Toast.vue';\n\nconst useRegisterEffect = errMessage => {\n  const router = useRouter();\n  const data = reactive({\n    username: '',\n    password: '',\n    checkPassword: ''\n  });\n\n  const handleRegister = async () => {\n    try {\n      const result = await post('/vue/register', {\n        username: data.username,\n        password: data.password,\n        checkPassword: data.checkPassword\n      });\n\n      if (result?.error === 0) {\n        localStorage.isRegister = true;\n        router.push({\n          name: 'Login'\n        });\n      } else {\n        errMessage('注册失败');\n      }\n    } catch (e) {\n      errMessage('请求失败');\n    }\n  };\n\n  const {\n    username,\n    password,\n    checkPassword\n  } = toRefs(data);\n  return {\n    username,\n    password,\n    checkPassword,\n    handleRegister\n  };\n};\n\nconst userRegisterToLoginEfffect = () => {\n  const router = useRouter();\n\n  const handleLoginClick = () => {\n    router.push({\n      name: 'Login'\n    });\n  };\n\n  return {\n    handleLoginClick\n  };\n};\n\nexport default {\n  name: 'Register',\n  components: {\n    Toast\n  },\n\n  setup() {\n    // const router = useRouter()\n    const {\n      showToast,\n      toastMessage,\n      errMessage\n    } = useToastEffect();\n    const {\n      username,\n      password,\n      checkPassword,\n      handleRegister\n    } = useRegisterEffect(errMessage);\n    const {\n      handleLoginClick\n    } = userRegisterToLoginEfffect();\n    return {\n      handleLoginClick,\n      username,\n      password,\n      checkPassword,\n      handleRegister,\n      showToast,\n      toastMessage\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAqBA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,KAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,KAAP,IAAgBC,cAAhB,QAAsC,4BAAtC;;AAEA,MAAMC,iBAAgB,GAAKC,UAAD,IAAgB;AACxC,QAAMC,MAAK,GAAIN,SAAS,EAAxB;AACA,QAAMO,IAAG,GAAIT,QAAQ,CAAC;AACpBU,YAAQ,EAAE,EADU;AAEpBC,YAAQ,EAAE,EAFU;AAGpBC,iBAAa,EAAE;AAHK,GAAD,CAArB;;AAKA,QAAMC,cAAa,GAAI,YAAY;AACjC,QAAI;AACF,YAAMC,MAAK,GAAI,MAAMX,IAAI,CAAC,eAAD,EAAkB;AACzCO,gBAAQ,EAAED,IAAI,CAACC,QAD0B;AAEzCC,gBAAQ,EAAEF,IAAI,CAACE,QAF0B;AAGzCC,qBAAa,EAAEH,IAAI,CAACG;AAHqB,OAAlB,CAAzB;;AAKA,UAAIE,MAAM,EAAEC,KAAR,KAAkB,CAAtB,EAAyB;AACvBC,oBAAY,CAACC,UAAb,GAA0B,IAA1B;AACAT,cAAM,CAACU,IAAP,CAAY;AAAEC,cAAI,EAAE;AAAR,SAAZ;AACF,OAHA,MAGO;AACLZ,kBAAU,CAAC,MAAD,CAAV;AACF;AACF,KAZA,CAYE,OAAOa,CAAP,EAAU;AACVb,gBAAU,CAAC,MAAD,CAAV;AACF;AACF,GAhBA;;AAiBA,QAAM;AAAEG,YAAF;AAAYC,YAAZ;AAAsBC;AAAtB,MAAwCX,MAAM,CAACQ,IAAD,CAApD;AACA,SAAO;AAAEC,YAAF;AAAYC,YAAZ;AAAsBC,iBAAtB;AAAqCC;AAArC,GAAP;AACF,CA1BA;;AA2BA,MAAMQ,0BAAyB,GAAI,MAAM;AACvC,QAAMb,MAAK,GAAIN,SAAS,EAAxB;;AACA,QAAMoB,gBAAe,GAAI,MAAM;AAC7Bd,UAAM,CAACU,IAAP,CAAY;AAAEC,UAAI,EAAE;AAAR,KAAZ;AACF,GAFA;;AAGA,SAAO;AAAEG;AAAF,GAAP;AACF,CANA;;AAQA,eAAe;AACbH,MAAI,EAAE,UADO;AAEbI,YAAU,EAAE;AACVnB;AADU,GAFC;;AAKboB,OAAI,GAAK;AACP;AACA,UAAM;AAAEC,eAAF;AAAaC,kBAAb;AAA2BnB;AAA3B,QAA0CF,cAAc,EAA9D;AACA,UAAM;AAAEK,cAAF;AAAYC,cAAZ;AAAsBC,mBAAtB;AAAqCC;AAArC,QAAwDP,iBAAiB,CAACC,UAAD,CAA/E;AACA,UAAM;AAAEe;AAAF,QAAuBD,0BAA0B,EAAvD;AACA,WAAO;AAAEC,sBAAF;AAAoBZ,cAApB;AAA8BC,cAA9B;AAAwCC,mBAAxC;AAAuDC,oBAAvD;AAAuEY,eAAvE;AAAkFC;AAAlF,KAAP;AACF;;AAXa,CAAf","names":["reactive","toRefs","useRouter","post","Toast","useToastEffect","useRegisterEffect","errMessage","router","data","username","password","checkPassword","handleRegister","result","error","localStorage","isRegister","push","name","e","userRegisterToLoginEfffect","handleLoginClick","components","setup","showToast","toastMessage"],"sourceRoot":"","sources":["/Users/mac/Desktop/jingdong/src/views/register/Register.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <img class=\"wrapper__img\" src=\"http://www.dell-lee.com/imgs/vue3/user.png\">\n    <div class=\"wrapper__input\">\n      <input v-model=\"username\" class=\"wrapper__input__content\" placeholder=\"请输入用户名\"/>\n    </div>\n    <div class=\"wrapper__input\">\n      <input v-model=\"password\" type=\"password\" class=\"wrapper__input__content\" placeholder=\"请输入密码\" />\n    </div>\n     <div class=\"wrapper__input\">\n      <input v-model=\"checkPassword\" type=\"password\" class=\"wrapper__input__content\" placeholder=\"确认密码\" />\n    </div>\n    <div class=\"wrapper__register-button\" @click='handleRegister'>立即注册</div>\n    <div class=\"wrapper__register-link\">\n      <span class=\"wrapper__register-link-login\" @click='handleLoginClick'>已有账号去登录</span>\n    </div>\n  </div>\n  <Toast v-if='showToast' :message=\"toastMessage\"/>\n</template>\n\n<script>\nimport { reactive, toRefs } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { post } from '../../utils/request.js'\nimport Toast, { useToastEffect } from '../../components/Toast.vue'\n\nconst useRegisterEffect = (errMessage) => {\n  const router = useRouter()\n  const data = reactive({\n    username: '',\n    password: '',\n    checkPassword: ''\n  })\n  const handleRegister = async () => {\n    try {\n      const result = await post('/vue/register', {\n        username: data.username,\n        password: data.password,\n        checkPassword: data.checkPassword\n      })\n      if (result?.error === 0) {\n        localStorage.isRegister = true\n        router.push({ name: 'Login' })\n      } else {\n        errMessage('注册失败')\n      }\n    } catch (e) {\n      errMessage('请求失败')\n    }\n  }\n  const { username, password, checkPassword } = toRefs(data)\n  return { username, password, checkPassword, handleRegister }\n}\nconst userRegisterToLoginEfffect = () => {\n  const router = useRouter()\n  const handleLoginClick = () => {\n    router.push({ name: 'Login' })\n  }\n  return { handleLoginClick }\n}\n\nexport default {\n  name: 'Register',\n  components: {\n    Toast\n  },\n  setup () {\n    // const router = useRouter()\n    const { showToast, toastMessage, errMessage } = useToastEffect()\n    const { username, password, checkPassword, handleRegister } = useRegisterEffect(errMessage)\n    const { handleLoginClick } = userRegisterToLoginEfffect()\n    return { handleLoginClick, username, password, checkPassword, handleRegister, showToast, toastMessage }\n  }\n}\n</script>\n\n<style lang='scss' scoped>\n@import '../../style/viriables.scss';\n  .wrapper {\n    position: absolute;\n    top: 50%;\n    left: 0;\n    right: 0;\n    transform: translateY(-50%);\n    &__img {\n      display: block;\n      margin:0 auto .4rem;\n      width: .66rem;\n      height: .66rem\n    }\n    &__input {\n      margin: 0 .4rem .16rem;\n      padding: 0 .16rem;\n      height: .48rem;\n      background: #F9F9F9;\n      border: 1px solid rgba(0,0,0,0.10);\n      border-radius: .06rem;;\n      &__content {\n        width: 100%;\n        line-height: .48rem;\n        border: none;\n        outline: none;\n        font-size: .16rem;\n        background: none;\n        &::placeholder {\n          color: $content-notice-fontcolor;\n        }\n      }\n    }\n    &__register-button {\n      margin: .32rem .4rem .16rem;\n      height: .48rem;\n      box-shadow: 0 .04rem .08rem 0 rgba(0,145,255,0.32);\n      border-radius: .04rem;\n      background: #0091FF;\n      text-align: center;\n      line-height: .48rem;\n      font-size: .16rem;\n      color: #fff;\n    }\n    &__register-link {\n      text-align: center;\n      font-size: .14rem;\n      color: $content-notice-fontcolor;\n    }\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}